{"version":3,"sources":["utils/helpers.tsx","components/Navbar.tsx","App.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","utils/constants.tsx","utils/searchHelper.ts","types/SearchParams.tsx","components/SearchLink.tsx","components/PeopleFilters.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","utils/filterAndSortHelper.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["getTabClassName","isActive","classNames","Navbar","className","role","to","App","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","CENTURIES","getSearchWith","paramsToUpdate","currentParams","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SexFilter","TableSortColumns","SearchParams","SearchLink","children","params","props","useSearchParams","searchParams","search","PeopleFilters","setSearchParams","query","get","Query","centuries","getAll","Centuries","sex","Sex","All","Male","Female","type","placeholder","onChange","event","target","map","century","toggledCentury","cn","includes","filter","item","length","PersonLink","person","name","born","died","fatherName","motherName","slug","mother","father","personId","useParams","useLocation","pathname","PeopleTable","people","sort","Sort","order","Order","handleSortClick","column","values","toUpperCase","slice","applyFilterAndSort","filteredPeople","trim","toLowerCase","personA","personB","Name","localeCompare","Born","Died","some","year","Math","ceil","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","useEffect","getPeople","peopleFromServer","find","human","addParents","catch","finally","visiblePeople","useMemo","PageNotFound","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9ab9d044.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Person } from '../types';\n\nexport function getTabClassName({ isActive }: { isActive: boolean }) {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n}\n\nexport function addParents(people: Person[]) {\n  return people.map(person => ({\n    ...person,\n    mother: people.find(human => human.name === person.motherName),\n    father: people.find(human => human.name === person.fatherName),\n  }));\n}\n\nexport function getCentury(year: number) {\n  return Math.ceil(year / 100);\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getTabClassName } from '../utils/helpers';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getTabClassName}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getTabClassName}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const NO_PARENT = '-';\n\nexport const REVERSED_ORDER = 'desc';\n\nexport const CENTURIES = [16, 17, 18, 19, 20];\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  paramsToUpdate: SearchParams,\n  currentParams: URLSearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","export enum SexFilter {\n  Female = 'f',\n  Male = 'm',\n  All = '',\n}\n\nexport enum TableSortColumns {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport enum SearchParams {\n  Query = 'query',\n  Sex = 'sex',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(params, searchParams),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { CENTURIES } from '../utils/constants';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchParams, SexFilter } from '../types/SearchParams';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(SearchParams.Query) || '';\n  const centuries = searchParams.getAll(SearchParams.Centuries) || [];\n  const sex = searchParams.get(SearchParams.Sex) || '';\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith({ query: event.target.value || null }, searchParams),\n    );\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={sex === SexFilter.All ? 'is-active' : ''}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={sex === SexFilter.Male ? 'is-active' : ''}\n          params={{ sex: SexFilter.Male }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={sex === SexFilter.Female ? 'is-active' : ''}\n          params={{ sex: SexFilter.Female }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map(century => {\n              const toggledCentury = century.toString();\n\n              return (\n                <SearchLink\n                  key={century}\n                  data-cy=\"century\"\n                  className={cn('button mr-1', {\n                    'is-info': centuries.includes(toggledCentury),\n                  })}\n                  params={{\n                    centuries: centuries.includes(toggledCentury)\n                      ? centuries.filter(item => item !== toggledCentury)\n                      : [...centuries, toggledCentury],\n                  }}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length || !centuries,\n              })}\n              params={{ centuries: [] }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, query: null, centuries: [] }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { NO_PARENT } from '../utils/constants';\nimport { SexFilter } from '../types/SearchParams';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personId } = useParams();\n  const { search } = useLocation();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={personId === slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={{ pathname: `/people/${slug}`, search }}\n          className={sex === SexFilter.Female ? 'has-text-danger' : ''}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            to={{ pathname: `/people/${mother.slug}`, search }}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </Link>\n        ) : (\n          <p>\n            {motherName ? `${motherName}` : NO_PARENT}\n          </p>\n        )}\n      </td>\n      <td>\n        {father ? (\n          <Link to={{ pathname: `/people/${father.slug}`, search }}>\n            {father.name}\n          </Link>\n        ) : (\n          <p>\n            {fatherName ? `${fatherName}` : NO_PARENT}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { SearchParams, TableSortColumns } from '../types/SearchParams';\nimport { SearchLink } from './SearchLink';\nimport { REVERSED_ORDER } from '../utils/constants';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get(SearchParams.Sort) || '';\n  const order = searchParams.get(SearchParams.Order) || '';\n\n  const handleSortClick = (column: string) => {\n    if (sort !== column) {\n      return { sort: column, order: null };\n    }\n\n    if (!order && sort === column) {\n      return { sort: column, order: REVERSED_ORDER };\n    }\n\n    return { order: null, sort: null };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(TableSortColumns).map(column => (\n            <th key={column}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {column[0].toUpperCase() + column.slice(1)}\n                <SearchLink params={handleSortClick(column)}>\n                  <span className=\"icon\">\n                    <i className={cn('fas fa-sort', {\n                      'fa-sort-up': !order && sort === column,\n                      'fa-sort-down': order && sort === column,\n                    })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from '../types';\nimport { SearchParams, TableSortColumns } from '../types/SearchParams';\nimport { getCentury } from './helpers';\n\nexport function applyFilterAndSort(\n  people: Person[],\n  searchParams: URLSearchParams,\n) {\n  let filteredPeople: Person[] = [...people];\n  const query = searchParams.get(SearchParams.Query)?.trim().toLowerCase();\n  const centuries = searchParams.getAll(SearchParams.Centuries);\n  const sex = searchParams.get(SearchParams.Sex);\n  const sort = searchParams.get(SearchParams.Sort);\n  const order = searchParams.get(SearchParams.Order) ? -1 : 1;\n\n  if (!searchParams.toString()) {\n    return people;\n  }\n\n  filteredPeople = filteredPeople.sort((personA, personB) => {\n    switch (sort) {\n      case TableSortColumns.Name:\n      case TableSortColumns.Sex:\n        return personA[sort].localeCompare(personB[sort]) * order;\n      case TableSortColumns.Born:\n      case TableSortColumns.Died:\n        return (personA[sort] - personB[sort]) * order;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (query) {\n    filteredPeople = filteredPeople.filter(person => {\n      return person.name.toLowerCase().includes(query)\n        || person.motherName?.toLowerCase().includes(query)\n        || person.fatherName?.toLowerCase().includes(query);\n    });\n  }\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(\n      person => centuries.some(\n        century => +century === getCentury(person.born),\n      ),\n    );\n  }\n\n  return filteredPeople;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Person } from '../types/Person';\nimport { addParents } from '../utils/helpers';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader/Loader';\nimport { PeopleFilters } from './PeopleFilters';\nimport { PeopleTable } from './PeopleTable';\nimport { applyFilterAndSort } from '../utils/filterAndSortHelper';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((peopleFromServer) => setPeople(addParents(peopleFromServer)))\n      .catch(() => {\n        setIsLoadError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const visiblePeople = useMemo(() => {\n    return applyFilterAndSort(people, searchParams);\n  }, [people, searchParams]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && !isLoadError && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isLoadError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!people.length && !isLoading && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!visiblePeople.length && !isLoading && !isLoadError && (\n                <p>\n                  There are no people matching the current search criteria\n                </p>\n              )}\n\n              {!isLoading && !isLoadError && !!visiblePeople.length && (\n                <PeopleTable people={visiblePeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport React from 'react';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route\n            index\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\":personId\"\n            element={<PeoplePage />}\n          />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={<PageNotFound />}\n        />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}